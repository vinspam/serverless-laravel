name: Deploy
env:
  ORG: rdokos
  NAME: serverless-laravel
  BASE_DOMAIN_NAME: rdok.co.uk
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BASE_DOMAIN_ROUTE_53_HOSTED_ZONE_ID: ${{ secrets.BASE_DOMAIN_ROUTE_53_HOSTED_ZONE_ID }}
on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        required: false
        description: "Allowed values: prod, test"
        default: prod
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environment variables
        id: env
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          [ "$ENVIRONMENT" = "" ] && ENVIRONMENT=test

          if [ "$ENVIRONMENT" == "test" ]; then
            echo ::set-output name=domain-name::"${NAME}-test.${BASE_DOMAIN_NAME}"
          elif [ "$ENVIRONMENT" == "prod" ]; then
            echo ::set-output name=domain-name::"${NAME}.${BASE_DOMAIN_NAME}"
          else
            printf '%s\n' "ENVIRONMENT is not in accepted range: test, prod." >&2
            exit 1
          fi

          echo ::set-output name=stack-name::"${ORG}-${ENVIRONMENT}-${NAME}"
          echo ::set-output name=stack-certificate-name::"${ORG}-${ENVIRONMENT}-${NAME}-certificate"
          echo ::set-output name=cicd-bucket::"${ORG}-${ENVIRONMENT}-cicd-${AWS_DEFAULT_REGION}"
      - name: Deploy domain certificate
        run: |
          sam deploy \
            --template-file template-certificate.yml \
            --region "us-east-1" \
            --s3-bucket "${{ steps.env.outputs.cicd-bucket }}" \
            --s3-prefix "${NAME}" \
            --stack-name "${{ steps.env.outputs.stack-certificate-name }}" \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset \
            --confirm-changeset \
            --parameter-overrides \
              DomainName="${{ steps.env.outputs.domain-name }}" \
              BaseDomainRoute53HostedZoneId="${BASE_DOMAIN_ROUTE_53_HOSTED_ZONE_ID}"
#      - name: Build
#        run: make vendor
#      - name: Deploy
#        run: |
#          sam deploy \
#            --s3-bucket "${{ steps.env.outputs.cicd-bucket }}" \
#            --s3-prefix "${NAME}" \
#            --stack-name "${{ steps.env.outputs.stack-name }}" \
#            --capabilities CAPABILITY_IAM \
#            --no-fail-on-empty-changeset
